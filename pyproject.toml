[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[pydocstyle]
convention = "google"


[tool.bandit.assert_used]
skips = ["**/test_*.py"]


[tool.black]
line-length = 79


[tool.commitizen]
name = "cz_customize"


[tool.commitizen.customize]
schema_pattern = "(?s)(build|chore|ci|docs|feat|fix|minor|patch|perf|refactor|style|test|revert)(\\(\\S+\\))?!?:( [^\\n\\r]+)((\\n\\n.*)|(\\s*))?$"


[tool.isort]
profile = "black"
line_length = 79


[tool.poetry]
name = "shell-logger"
version = "1.0.0"
license = "LICENSE.md"
readme = "README.md"
keywords = ["shell", "logging"]
repository = "https://github.com/sandialabs/shell-logger"
description = "A tool for keeping track of Python's interactions with the shell."
documentation = "https://shell-logger.readthedocs.io"
authors = [
    "Josh Braun <josbrau@sandia.gov>",
    "David Collins <dcollin@sandia.gov>",
    "Jason M. Gates <jmgate@sandia.gov>"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: MacOS",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Topic :: Software Development",
    "Topic :: Software Development :: Debuggers",
    "Topic :: Software Development :: Documentation",
    "Topic :: System :: Logging",
    "Topic :: System :: Shells",
    "Topic :: System :: System Shells",
    "Typing :: Typed"
]


[tool.poetry.dependencies]
python = ">=3.7"


[tool.poetry.dev-dependencies]
# At some point, convert from the various requirements.txt files to this
# list of Poetry development dependencies.


[tool.poetry.urls]
CI = "https://github.com/sandialabs/shell-logger/actions"
Issues = "https://github.com/sandialabs/shell-logger/issues"


[tool.semantic_release]
build_command = "python3 -m pip install poetry && poetry build"
commit_message = """
chore: Release v{version}

Automatically generated by python-semantic-release."""
version_variables = [
    "doc/source/conf.py:version",
    "shell_logger/__init__.py:__version__",
]
version_toml = [
    "pyproject.toml:tool.poetry.version",
]


[tool.semantic_release.branches.master]
match = "master"


[tool.semantic_release.changelog]
exclude_commit_patterns = [
    "Merge pull request",
]


[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"


[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "minor",
    "patch",
    "perf",
    "refactor",
    "style",
    "test",
]
minor_tags = ["feat", "minor"]
patch_tags = ["fix", "patch", "perf"]
